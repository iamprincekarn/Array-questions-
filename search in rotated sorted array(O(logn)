//This code is actually bigger than all other solutions of leetcode
//i didn't get the leetcode solutions so i have solved it this way
//may be in future i come to this question and solved it as others leetcoders

class Solution {
public:
    int search(vector<int>& nums, int target) {
        int n = nums.size();
        int low = 0;
        int high = nums.size()-1;
        int pivotIndex;
        while(low<=high)
        {
            int mid = (low+high)/2;
            if(nums[mid]>=nums[(mid-1+n)%n] and nums[mid]>=nums[(mid+1)%n]) 
            {
                pivotIndex = mid;
                break;
            }
            else if(nums[mid]>=nums[n-1])
            low = mid+1;
            else
            high = mid-1;
        }
        low = 0;
        high = pivotIndex;
        while(low<=high)
        {
            int mid = (low+high)/2;
            if(nums[mid] == target)
            return mid;
            else if(target>nums[mid])
            {
                low = mid+1;
            }
            else
            high = mid-1;
        }
        low = pivotIndex+1;
        high = nums.size()-1;
        while(low<=high)
        {
            int mid = (low+high)/2;
            if(nums[mid] == target)
            return mid;
            else if(target>nums[mid])
            {
                low = mid+1;
            }
            else
            high = mid-1;
        }

        return -1;
    }
};
